<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<SALTelemetrySet xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/lsst-ts/ts_xml/develop/python/lsst/ts/xml/data/schema/SALTelemetrySet.xsd">
  <!--Created by xmlmaker2 for subsystem ATCamera class ATCamera_focal_plane_Ccd using level 1-->
  <!--========================================================================================-->
  <SALTelemetry>
    <Subsystem>ATCamera</Subsystem>
    <EFDB_Topic>ATCamera_focal_plane_Ccd</EFDB_Topic>
    <!--CCS: Dictionary_Checksum: 3323840614L -->
    <!--CCSMETA: Array gDV indexed by location-->
    <item>
      <EFDB_Name>gDV</EFDB_Name>
      <Description>GD 0 voltage</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <item>
      <EFDB_Name>location</EFDB_Name>
      <Description>ccd location</Description>
      <IDL_Type>string</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
    <!--CCSMETA: Array oDI indexed by location-->
    <item>
      <EFDB_Name>oDI</EFDB_Name>
      <Description>OD 0 current</Description>
      <IDL_Type>double</IDL_Type>
      <Units>mA</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array oDV indexed by location-->
    <item>
      <EFDB_Name>oDV</EFDB_Name>
      <Description>OD 0 voltage</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array oGV indexed by location-->
    <item>
      <EFDB_Name>oGV</EFDB_Name>
      <Description>OG 0 voltage</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rDV indexed by location-->
    <item>
      <EFDB_Name>rDV</EFDB_Name>
      <Description>RD 0 voltage</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array temp indexed by location-->
    <item>
      <EFDB_Name>temp</EFDB_Name>
      <Description>SW temperature</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Celsius</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
  </SALTelemetry>
  <!--Created by xmlmaker2 for subsystem ATCamera class ATCamera_focal_plane_Reb using level 1-->
  <!--========================================================================================-->
  <SALTelemetry>
    <Subsystem>ATCamera</Subsystem>
    <EFDB_Topic>ATCamera_focal_plane_Reb</EFDB_Topic>
    <!--CCS: Dictionary_Checksum: 3470282761L -->
    <!--CCSMETA: Array anaI indexed by location-->
    <item>
      <EFDB_Name>anaI</EFDB_Name>
      <Description>Analog PS current</Description>
      <IDL_Type>double</IDL_Type>
      <Units>mA</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array anaV indexed by location-->
    <item>
      <EFDB_Name>anaV</EFDB_Name>
      <Description>Analog PS voltage</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array aspicl_Temp0 indexed by location-->
    <item>
      <EFDB_Name>aspicl_Temp0</EFDB_Name>
      <Description>ASPIC 0 lower temp</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Celsius</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array aspicu_Temp0 indexed by location-->
    <item>
      <EFDB_Name>aspicu_Temp0</EFDB_Name>
      <Description>ASPIC 0 upper temp</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Celsius</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array clkHI indexed by location-->
    <item>
      <EFDB_Name>clkHI</EFDB_Name>
      <Description>Clock High PS current</Description>
      <IDL_Type>double</IDL_Type>
      <Units>mA</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array clkHV indexed by location-->
    <item>
      <EFDB_Name>clkHV</EFDB_Name>
      <Description>Clock High PS voltage</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array clkLV indexed by location-->
    <item>
      <EFDB_Name>clkLV</EFDB_Name>
      <Description>Clock Low PS voltage</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array digI indexed by location-->
    <item>
      <EFDB_Name>digI</EFDB_Name>
      <Description>Digital PS current</Description>
      <IDL_Type>double</IDL_Type>
      <Units>mA</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array digV indexed by location-->
    <item>
      <EFDB_Name>digV</EFDB_Name>
      <Description>Digital PS voltage</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array hVBiasSwitch indexed by location-->
    <item>
      <EFDB_Name>hVBiasSwitch</EFDB_Name>
      <Description>HV bias switch</Description>
      <IDL_Type>double</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array htrPI indexed by location-->
    <item>
      <EFDB_Name>htrPI</EFDB_Name>
      <Description>Heater PS current</Description>
      <IDL_Type>double</IDL_Type>
      <Units>mA</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array htrPV indexed by location-->
    <item>
      <EFDB_Name>htrPV</EFDB_Name>
      <Description>Heater PS voltage</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array htrV indexed by location-->
    <item>
      <EFDB_Name>htrV</EFDB_Name>
      <Description>Heater voltage</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array htrW indexed by location-->
    <item>
      <EFDB_Name>htrW</EFDB_Name>
      <Description>Heater power</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Watt</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <item>
      <EFDB_Name>location</EFDB_Name>
      <Description>reb location</Description>
      <IDL_Type>string</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
    <!--CCSMETA: Array oDI indexed by location-->
    <item>
      <EFDB_Name>oDI</EFDB_Name>
      <Description>OD PS current</Description>
      <IDL_Type>double</IDL_Type>
      <Units>mA</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array oDV indexed by location-->
    <item>
      <EFDB_Name>oDV</EFDB_Name>
      <Description>OD PS voltage</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array pClk0 indexed by location-->
    <item>
      <EFDB_Name>pClk0</EFDB_Name>
      <Description>Parallel 0</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array pClkL indexed by location-->
    <item>
      <EFDB_Name>pClkL</EFDB_Name>
      <Description>Parallel lower</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array pClkU indexed by location-->
    <item>
      <EFDB_Name>pClkU</EFDB_Name>
      <Description>Parallel upper</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array power indexed by location-->
    <item>
      <EFDB_Name>power</EFDB_Name>
      <Description>Total power</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Watt</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rG0 indexed by location-->
    <item>
      <EFDB_Name>rG0</EFDB_Name>
      <Description>RG 0</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rGL indexed by location-->
    <item>
      <EFDB_Name>rGL</EFDB_Name>
      <Description>Reset gate lower</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rGU indexed by location-->
    <item>
      <EFDB_Name>rGU</EFDB_Name>
      <Description>Reset gate upper</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rTDTemp indexed by location-->
    <item>
      <EFDB_Name>rTDTemp</EFDB_Name>
      <Description>RTD temperature</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Celsius</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array sClk0 indexed by location-->
    <item>
      <EFDB_Name>sClk0</EFDB_Name>
      <Description>Serial 0</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array sClkL indexed by location-->
    <item>
      <EFDB_Name>sClkL</EFDB_Name>
      <Description>Serial lower</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array sClkU indexed by location-->
    <item>
      <EFDB_Name>sClkU</EFDB_Name>
      <Description>Serial upper</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array temp1 indexed by location-->
    <item>
      <EFDB_Name>temp1</EFDB_Name>
      <Description>Board temperature 1</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Celsius</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array temp2 indexed by location-->
    <item>
      <EFDB_Name>temp2</EFDB_Name>
      <Description>Board temperature 2</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Celsius</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array temp3 indexed by location-->
    <item>
      <EFDB_Name>temp3</EFDB_Name>
      <Description>Board temperature 3</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Celsius</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array temp4 indexed by location-->
    <item>
      <EFDB_Name>temp4</EFDB_Name>
      <Description>Board temperature 4</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Celsius</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array temp5 indexed by location-->
    <item>
      <EFDB_Name>temp5</EFDB_Name>
      <Description>Board temperature 5</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Celsius</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array temp6 indexed by location-->
    <item>
      <EFDB_Name>temp6</EFDB_Name>
      <Description>Board temperature 6</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Celsius</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
  </SALTelemetry>
  <!--Created by xmlmaker2 for subsystem ATCamera class ATCamera_focal_plane_RebTotalPower using level 1-->
  <!--==================================================================================================-->
  <SALTelemetry>
    <Subsystem>ATCamera</Subsystem>
    <EFDB_Topic>ATCamera_focal_plane_RebTotalPower</EFDB_Topic>
    <!--CCS: Dictionary_Checksum: 2608570576L -->
    <item>
      <EFDB_Name>rebTotalPower</EFDB_Name>
      <Description>Reb Total Power</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Watt</Units>
      <Count>1</Count>
    </item>
  </SALTelemetry>
  <!--Created by xmlmaker2 for subsystem ATCamera class ATCamera_daq_monitor_Reb_Trending using level 1 for category Trending-->
  <!--=======================================================================================================================-->
  <SALTelemetry>
    <Subsystem>ATCamera</Subsystem>
    <EFDB_Topic>ATCamera_daq_monitor_Reb_Trending</EFDB_Topic>
    <!--CCS: Dictionary_Checksum: 2805192593L -->
    <!--CCSMETA: Array driver_errors indexed by location-->
    <item>
      <EFDB_Name>driver_errors</EFDB_Name>
      <Description>PGP Frame Errors. The total number of PGP frames received in error. This should equal the rx_errors from the Firmware statistics.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array driver_received indexed by location-->
    <item>
      <EFDB_Name>driver_received</EFDB_Name>
      <Description>PGP Frames Received. The total number of PGP frames received. This should equal with the rx_frames from the Firmware statistics.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array driver_rx0 indexed by location-->
    <item>
      <EFDB_Name>driver_rx0</EFDB_Name>
      <Description>PGP Frames Received (channel 0). Counts the number of PGP frames received on each virtual channel.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array driver_rx1 indexed by location-->
    <item>
      <EFDB_Name>driver_rx1</EFDB_Name>
      <Description>PGP Frames Received (channel 1). Counts the number of PGP frames received on each virtual channel.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array driver_rx2 indexed by location-->
    <item>
      <EFDB_Name>driver_rx2</EFDB_Name>
      <Description>PGP Frames Received (channel 2). Counts the number of PGP frames received on each virtual channel.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array driver_rx3 indexed by location-->
    <item>
      <EFDB_Name>driver_rx3</EFDB_Name>
      <Description>PGP Frames Received (channel 3). Counts the number of PGP frames received on each virtual channel.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array firmware_cell_errors indexed by location-->
    <item>
      <EFDB_Name>firmware_cell_errors</EFDB_Name>
      <Description>PGP Cell Error Counter. This error counter increments when the lowest level PGP protocol quantum is in error. Examples of errors that would cause this counter to increment are, framing violations, incompatible protocol versions, CRC error, incorrect Cell size.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array firmware_last_rx indexed by location-->
    <item>
      <EFDB_Name>firmware_last_rx</EFDB_Name>
      <Description>Last Received Opcode. The value of the most recently received Opcode.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array firmware_last_tx indexed by location-->
    <item>
      <EFDB_Name>firmware_last_tx</EFDB_Name>
      <Description>Last transmitted Opcode. The value of the most recent command sent from the REB.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array firmware_link_down indexed by location-->
    <item>
      <EFDB_Name>firmware_link_down</EFDB_Name>
      <Description>Link Down Counter. This should increment by 1 every time the PGP link transitions from UP to DOWN. Unfortunately, it does not use the LSST DAQ definition of UP, but rather only bits 1..0 of the state. Though normal initialization of the link causes only a single increment, on occasion a REB power cycle can cause the counter to increment more than once.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array firmware_link_errors indexed by location-->
    <item>
      <EFDB_Name>firmware_link_errors</EFDB_Name>
      <Description> Link Error Counter. This counter represents a lower level error than the Cell Error. This error is caused by 8B10B errors on the high speed serial line such as disparity errors or symbol decode errors. Sometimes this counter can increment during the link establishment process, though I have tried to change the firmware to eliminate this.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array firmware_link_status indexed by location-->
    <item>
      <EFDB_Name>firmware_link_status</EFDB_Name>
      <Description>State of the PGP link (bitfield)</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array firmware_overflow_local0 indexed by location-->
    <item>
      <EFDB_Name>firmware_overflow_local0</EFDB_Name>
      <Description>Local Overflow Counters (channel 0). These four counters measure the number of times the firmware on the local side of the link has overflowed its buffers for each virtual channel.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array firmware_overflow_local1 indexed by location-->
    <item>
      <EFDB_Name>firmware_overflow_local1</EFDB_Name>
      <Description>Local Overflow Counters (channel 1). These four counters measure the number of times the firmware on the local side of the link has overflowed its buffers for each virtual channel.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array firmware_overflow_local2 indexed by location-->
    <item>
      <EFDB_Name>firmware_overflow_local2</EFDB_Name>
      <Description>Local Overflow Counters (channel 2). These four counters measure the number of times the firmware on the local side of the link has overflowed its buffers for each virtual channel.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array firmware_overflow_local3 indexed by location-->
    <item>
      <EFDB_Name>firmware_overflow_local3</EFDB_Name>
      <Description>Local Overflow Counters (channel 3). These four counters measure the number of times the firmware on the local side of the link has overflowed its buffers for each virtual channel.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array firmware_overflow_remote0 indexed by location-->
    <item>
      <EFDB_Name>firmware_overflow_remote0</EFDB_Name>
      <Description>Remote Overflow Counters (channel 0). These four counters measure the number of times the firmware on the remote side of the link has overflowed its buffers for each virtual channel.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array firmware_overflow_remote1 indexed by location-->
    <item>
      <EFDB_Name>firmware_overflow_remote1</EFDB_Name>
      <Description>Remote Overflow Counters (channel 1). These four counters measure the number of times the firmware on the remote side of the link has overflowed its buffers for each virtual channel.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array firmware_overflow_remote2 indexed by location-->
    <item>
      <EFDB_Name>firmware_overflow_remote2</EFDB_Name>
      <Description>Remote Overflow Counters (channel 2). These four counters measure the number of times the firmware on the remote side of the link has overflowed its buffers for each virtual channel.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array firmware_overflow_remote3 indexed by location-->
    <item>
      <EFDB_Name>firmware_overflow_remote3</EFDB_Name>
      <Description>Remote Overflow Counters (channel 3). These four counters measure the number of times the firmware on the remote side of the link has overflowed its buffers for each virtual channel.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array firmware_rlink_data indexed by location-->
    <item>
      <EFDB_Name>firmware_rlink_data</EFDB_Name>
      <Description>Remote Link Data</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array firmware_rx_clock indexed by location-->
    <item>
      <EFDB_Name>firmware_rx_clock</EFDB_Name>
      <Description>Receive Clock Frequency. These quantities reflect the frequency of the clocks used by the Receive and Transmit sides of the transceivers. (Should be around 156.25 MHz)</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>Hz</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array firmware_rx_errors indexed by location-->
    <item>
      <EFDB_Name>firmware_rx_errors</EFDB_Name>
      <Description>Receive Errors. This is the highest level PGP protocol error. This counter increments when a PGP frame has been successfully received, but was marked with an error when it was sent by the REB.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array firmware_rx_frames indexed by location-->
    <item>
      <EFDB_Name>firmware_rx_frames</EFDB_Name>
      <Description>Received Frames. This is the number of PGP Frames received from the REB. (I don't recall if it is mutually exclusive with rx_errors)</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array firmware_rx_op indexed by location-->
    <item>
      <EFDB_Name>firmware_rx_op</EFDB_Name>
      <Description> Description: Received Opcode Count. The number of synchronous commands sent to the REB.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array firmware_tx_clock indexed by location-->
    <item>
      <EFDB_Name>firmware_tx_clock</EFDB_Name>
      <Description>Transmit Clock Frequency. These quantities reflect the frequency of the clocks used by the Receive and Transmit sides of the transceivers. (Should be around 156.25 MHz)</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>Hz</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array firmware_tx_errors indexed by location-->
    <item>
      <EFDB_Name>firmware_tx_errors</EFDB_Name>
      <Description>Transmit Errors. This counter increments when a frame is transmitted with the error bit set. (Analog to rx_errors.)</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array firmware_tx_frames indexed by location-->
    <item>
      <EFDB_Name>firmware_tx_frames</EFDB_Name>
      <Description>Transmitted Frames: This is the number of PGP Frame transmitted to the REB.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array firmware_tx_op indexed by location-->
    <item>
      <EFDB_Name>firmware_tx_op</EFDB_Name>
      <Description>Transmit Opcode Count. These count the number of "synchronous commands" sent from the REB to the RCE. We do not use this functionality. </Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <item>
      <EFDB_Name>location</EFDB_Name>
      <Description>reb location</Description>
      <IDL_Type>string</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
    <!--CCSMETA: Array rds_bdi_firsts indexed by location-->
    <item>
      <EFDB_Name>rds_bdi_firsts</EFDB_Name>
      <Description>BDI Firsts count. The number of BDI pages marked as First (Start of Image flag is set.)</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rds_bdi_frees indexed by location-->
    <item>
      <EFDB_Name>rds_bdi_frees</EFDB_Name>
      <Description>BDI Frees count. The number of BDI pages processed.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rds_bdi_lasts indexed by location-->
    <item>
      <EFDB_Name>rds_bdi_lasts</EFDB_Name>
      <Description>BDI Lasts count. The number of BDI pages marked as last (End of Image flag is set.)</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rds_bdi_nulls indexed by location-->
    <item>
      <EFDB_Name>rds_bdi_nulls</EFDB_Name>
      <Description>BDI Null Pages count. The BDI woke up but no data was present.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rds_bdi_overflows indexed by location-->
    <item>
      <EFDB_Name>rds_bdi_overflows</EFDB_Name>
      <Description>BDI Overflows count. The BDI can report that its data buffers have overflowed.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rds_bdi_seq_errors indexed by location-->
    <item>
      <EFDB_Name>rds_bdi_seq_errors</EFDB_Name>
      <Description>BDI Sequence Errors count. The BDI can mark pages as coming out of sequence. </Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rds_bdi_waits indexed by location-->
    <item>
      <EFDB_Name>rds_bdi_waits</EFDB_Name>
      <Description>Bulk Data Interface Waits count. The number of times we have waited for a page of pixel data from the Bulk Data Interface.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rds_discards indexed by location-->
    <item>
      <EFDB_Name>rds_discards</EFDB_Name>
      <Description>Discards count. The number of times the Server tried to insert Image Metadata into the processing queue but failed to do so. (Presumably because the queue was full.)</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rds_no_event indexed by location-->
    <item>
      <EFDB_Name>rds_no_event</EFDB_Name>
      <Description>No Event count. Upon the arrival of pixel data, there was no Image Metadata available to associate with it. The pixel data is discarded.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rds_wakes indexed by location-->
    <item>
      <EFDB_Name>rds_wakes</EFDB_Name>
      <Description>Wakes count. This counts the number of times the RDS server was awakened to put Image Metadata into it's processing queue.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rms_in_reset indexed by location-->
    <item>
      <EFDB_Name>rms_in_reset</EFDB_Name>
      <Description>Link In Reset error count. When a request cannot be fulfilled because the link is being reset.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rms_inv_tids indexed by location-->
    <item>
      <EFDB_Name>rms_inv_tids</EFDB_Name>
      <Description>Invalid Task ID count. A Response was received that does not have a valid identifier to use to pair it with a Request.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rms_link_down indexed by location-->
    <item>
      <EFDB_Name>rms_link_down</EFDB_Name>
      <Description>Link is Down error count. When a request cannot be fulfilled because the PGP Link is down.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rms_lists_posted indexed by location-->
    <item>
      <EFDB_Name>rms_lists_posted</EFDB_Name>
      <Description>Lists Posted count. The number of requests (Lists of register operations) posted the Server.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rms_ops_posted indexed by location-->
    <item>
      <EFDB_Name>rms_ops_posted</EFDB_Name>
      <Description>Register Operation Requests count. The number of register operation requests sent to the REB.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rms_orphans indexed by location-->
    <item>
      <EFDB_Name>rms_orphans</EFDB_Name>
      <Description>Invalid Task ID count. A Response was received that does not have a valid identifier to use to pair it with a Request.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rms_probes indexed by location-->
    <item>
      <EFDB_Name>rms_probes</EFDB_Name>
      <Description>Probe Counter. The number of times the RMS server has been probed by Clients. Normally this is once per posted list, but can also be done to detect the presence of RMS servers.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rms_responses indexed by location-->
    <item>
      <EFDB_Name>rms_responses</EFDB_Name>
      <Description>Register Operation Responses count. The number of register operation responses from the REB. Should be equal to the number of Waits and Operation Requests.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rms_rundowns indexed by location-->
    <item>
      <EFDB_Name>rms_rundowns</EFDB_Name>
      <Description>Orphaned Response count. A Response was received for which there was no corresponding request.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rms_tid_hwm indexed by location-->
    <item>
      <EFDB_Name>rms_tid_hwm</EFDB_Name>
      <Description>Task ID High Water Mark. There is a fixed number of buffers available to store outstanding requests while waiting for responses. If the REB does not respond to a request, then a buffer resource is lost. This counter reflects the largest number of outstanding requests. Currently, in a properly functioning system there should never be more than one outstanding request at a time, and the High Water Mark should never be more than 1.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rms_unopened indexed by location-->
    <item>
      <EFDB_Name>rms_unopened</EFDB_Name>
      <Description>Plugin Unopened error count. The window for this error to be encountered is very small. When a request cannot be fulfilled because the Plugin is not yet initialized.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
    <!--CCSMETA: Array rms_waits indexed by location-->
    <item>
      <EFDB_Name>rms_waits</EFDB_Name>
      <Description>Waits count. The number of times RMS has been presented with a PGP frame from the firmware.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
      <IsJavaArray>yes</IsJavaArray>
    </item>
  </SALTelemetry>
  <!--Created by xmlmaker2 for subsystem ATCamera class ATCamera_daq_monitor_Store using level 1-->
  <!--==========================================================================================-->
  <SALTelemetry>
    <Subsystem>ATCamera</Subsystem>
    <EFDB_Topic>ATCamera_daq_monitor_Store</EFDB_Topic>
    <!--CCS: Dictionary_Checksum: 1170090743L -->
    <item>
      <EFDB_Name>capacity</EFDB_Name>
      <Description>total disk space</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Gbyte</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>freeFraction</EFDB_Name>
      <Description>available-space fraction</Description>
      <IDL_Type>double</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>freeSpace</EFDB_Name>
      <Description>available disk space</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Gbyte</Units>
      <Count>1</Count>
    </item>
  </SALTelemetry>
  <!--Created by xmlmaker2 for subsystem ATCamera class ATCamera_daq_monitor_Sum_Trending using level 1 for category Trending-->
  <!--=======================================================================================================================-->
  <SALTelemetry>
    <Subsystem>ATCamera</Subsystem>
    <EFDB_Topic>ATCamera_daq_monitor_Sum_Trending</EFDB_Topic>
    <!--CCS: Dictionary_Checksum: 385642950L -->
    <item>
      <EFDB_Name>driver_errors</EFDB_Name>
      <Description>Sum over locations: PGP Frame Errors. The total number of PGP frames received in error. This should equal the rx_errors from the Firmware statistics.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>firmware_cell_errors</EFDB_Name>
      <Description>Sum over locations: PGP Cell Error Counter. This error counter increments when the lowest level PGP protocol quantum is in error. Examples of errors that would cause this counter to increment are, framing violations, incompatible protocol versions, CRC error, incorrect Cell size.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>firmware_link_down</EFDB_Name>
      <Description>Sum over locations: Link Down Counter. This should increment by 1 every time the PGP link transitions from UP to DOWN. Unfortunately, it does not use the LSST DAQ definition of UP, but rather only bits 1..0 of the state. Though normal initialization of the link causes only a single increment, on occasion a REB power cycle can cause the counter to increment more than once.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>firmware_link_errors</EFDB_Name>
      <Description>Sum over locations:  Link Error Counter. This counter represents a lower level error than the Cell Error. This error is caused by 8B10B errors on the high speed serial line such as disparity errors or symbol decode errors. Sometimes this counter can increment during the link establishment process, though I have tried to change the firmware to eliminate this.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>firmware_overflow_local0</EFDB_Name>
      <Description>Sum over locations: Local Overflow Counters (channel 0). These four counters measure the number of times the firmware on the local side of the link has overflowed its buffers for each virtual channel.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>firmware_overflow_local1</EFDB_Name>
      <Description>Sum over locations: Local Overflow Counters (channel 1). These four counters measure the number of times the firmware on the local side of the link has overflowed its buffers for each virtual channel.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>firmware_overflow_local2</EFDB_Name>
      <Description>Sum over locations: Local Overflow Counters (channel 2). These four counters measure the number of times the firmware on the local side of the link has overflowed its buffers for each virtual channel.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>firmware_overflow_remote0</EFDB_Name>
      <Description>Sum over locations: Remote Overflow Counters (channel 0). These four counters measure the number of times the firmware on the remote side of the link has overflowed its buffers for each virtual channel.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>firmware_overflow_remote1</EFDB_Name>
      <Description>Sum over locations: Remote Overflow Counters (channel 1). These four counters measure the number of times the firmware on the remote side of the link has overflowed its buffers for each virtual channel.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>firmware_overflow_remote2</EFDB_Name>
      <Description>Sum over locations: Remote Overflow Counters (channel 2). These four counters measure the number of times the firmware on the remote side of the link has overflowed its buffers for each virtual channel.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>firmware_rx_errors</EFDB_Name>
      <Description>Sum over locations: Receive Errors. This is the highest level PGP protocol error. This counter increments when a PGP frame has been successfully received, but was marked with an error when it was sent by the REB.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>firmware_tx_errors</EFDB_Name>
      <Description>Sum over locations: Transmit Errors. This counter increments when a frame is transmitted with the error bit set. (Analog to rx_errors.)</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>rds_bdi_nulls</EFDB_Name>
      <Description>Sum over locations: BDI Null Pages count. The BDI woke up but no data was present.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>rds_bdi_overflows</EFDB_Name>
      <Description>Sum over locations: BDI Overflows count. The BDI can report that its data buffers have overflowed.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>rds_bdi_seq_errors</EFDB_Name>
      <Description>Sum over locations: BDI Sequence Errors count. The BDI can mark pages as coming out of sequence. </Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>rds_discards</EFDB_Name>
      <Description>Sum over locations: Discards count. The number of times the Server tried to insert Image Metadata into the processing queue but failed to do so. (Presumably because the queue was full.)</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>rds_no_event</EFDB_Name>
      <Description>Sum over locations: No Event count. Upon the arrival of pixel data, there was no Image Metadata available to associate with it. The pixel data is discarded.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>rms_in_reset</EFDB_Name>
      <Description>Sum over locations: Link In Reset error count. When a request cannot be fulfilled because the link is being reset.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>rms_inv_tids</EFDB_Name>
      <Description>Sum over locations: Invalid Task ID count. A Response was received that does not have a valid identifier to use to pair it with a Request.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>rms_link_down</EFDB_Name>
      <Description>Sum over locations: Link is Down error count. When a request cannot be fulfilled because the PGP Link is down.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>rms_orphans</EFDB_Name>
      <Description>Sum over locations: Invalid Task ID count. A Response was received that does not have a valid identifier to use to pair it with a Request.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>rms_unopened</EFDB_Name>
      <Description>Sum over locations: Plugin Unopened error count. The window for this error to be encountered is very small. When a request cannot be fulfilled because the Plugin is not yet initialized.</Description>
      <IDL_Type>long long</IDL_Type>
      <Units>unitless</Units>
      <Count>1</Count>
    </item>
  </SALTelemetry>
  <!--Created by xmlmaker2 for subsystem ATCamera class ATCamera_power using level 0-->
  <!--==============================================================================-->
  <SALTelemetry>
    <Subsystem>ATCamera</Subsystem>
    <EFDB_Topic>ATCamera_power</EFDB_Topic>
    <!--CCS: Dictionary_Checksum: 1269524998L -->
    <item>
      <EFDB_Name>analog_I</EFDB_Name>
      <Description>Analog current</Description>
      <IDL_Type>double</IDL_Type>
      <Units>mA</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>analog_V</EFDB_Name>
      <Description>Analog voltage</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>aux_I</EFDB_Name>
      <Description>Aux current</Description>
      <IDL_Type>double</IDL_Type>
      <Units>mA</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>aux_V</EFDB_Name>
      <Description>Aux voltage</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>clkhigh_I</EFDB_Name>
      <Description>Clock high current</Description>
      <IDL_Type>double</IDL_Type>
      <Units>mA</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>clkhigh_V</EFDB_Name>
      <Description>Clock high voltage</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>clklow_I</EFDB_Name>
      <Description>Clock low current</Description>
      <IDL_Type>double</IDL_Type>
      <Units>mA</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>clklow_V</EFDB_Name>
      <Description>Clock low voltage</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>dphi_I</EFDB_Name>
      <Description>DPHI current</Description>
      <IDL_Type>double</IDL_Type>
      <Units>mA</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>dphi_V</EFDB_Name>
      <Description>DPHI voltage</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>digital_I</EFDB_Name>
      <Description>Digital current</Description>
      <IDL_Type>double</IDL_Type>
      <Units>mA</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>digital_V</EFDB_Name>
      <Description>Digital voltage</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>fan_I</EFDB_Name>
      <Description>Fan current</Description>
      <IDL_Type>double</IDL_Type>
      <Units>mA</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>fan_V</EFDB_Name>
      <Description>Fan voltage</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>hvbias_I</EFDB_Name>
      <Description>HV bias current</Description>
      <IDL_Type>double</IDL_Type>
      <Units>mA</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>hvbias_V</EFDB_Name>
      <Description>HV bias voltage</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>od_I</EFDB_Name>
      <Description>OD current</Description>
      <IDL_Type>double</IDL_Type>
      <Units>mA</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>od_V</EFDB_Name>
      <Description>OD voltage</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>otm_I</EFDB_Name>
      <Description>OTM current</Description>
      <IDL_Type>double</IDL_Type>
      <Units>mA</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>otm_V</EFDB_Name>
      <Description>OTM voltage</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
    </item>
  </SALTelemetry>
  <!--Created by xmlmaker2 for subsystem ATCamera class ATCamera_vacuum using level 0-->
  <!--===============================================================================-->
  <SALTelemetry>
    <Subsystem>ATCamera</Subsystem>
    <EFDB_Topic>ATCamera_vacuum</EFDB_Topic>
    <!--CCS: Dictionary_Checksum: 1376639655L -->
    <item>
      <EFDB_Name>tempCCD</EFDB_Name>
      <Description>CCD temperature</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Celsius</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>tempCCDSetPoint</EFDB_Name>
      <Description>Setpoint temperature</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Celsius</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>tempColdPlate</EFDB_Name>
      <Description>Cold plate temperature</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Celsius</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>tempCryoHead</EFDB_Name>
      <Description>Cryo head temperature</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Celsius</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>vacuum</EFDB_Name>
      <Description>Cryo vacuum</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Torr</Units>
      <Count>1</Count>
    </item>
  </SALTelemetry>
  <!--Created by xmlmaker2 for subsystem ATCamera class ATCamera_bonn_shutter_Device using level 1-->
  <!--============================================================================================-->
  <SALTelemetry>
    <Subsystem>ATCamera</Subsystem>
    <EFDB_Topic>ATCamera_bonn_shutter_Device</EFDB_Topic>
    <!--CCS: Dictionary_Checksum: 1759124350L -->
    <item>
      <EFDB_Name>bonn_V36</EFDB_Name>
      <Description>BonnShutter 5-volt reading</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
    </item>
    <item>
      <EFDB_Name>bonn_V5</EFDB_Name>
      <Description>BonnShutter 5-volt reading</Description>
      <IDL_Type>double</IDL_Type>
      <Units>Volt</Units>
      <Count>1</Count>
    </item>
  </SALTelemetry>
</SALTelemetrySet>
