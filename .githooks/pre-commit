#!/bin/sh
if git rev-parse --verify HEAD >/dev/null 2>&1
then
    against=HEAD
else
    # Initial commit: diff against an empty tree object
    against=$(git hash-object -t tree /dev/null)
fi

# modify black & xmllint location as needed
BLACK="black"
XMLLINT="xmllint"

retval=0

check_python_wellformed()
{
    for FILE in `git diff-index --name-only --cached $against --` ; do
        mimetype=$(file --mime-type $FILE)
        if [[ $mimetype =~ "text/x-python" ]]; then
            echo "Checking black formatting: $FILE"
            if ! $BLACK --check $FILE; then
                echo "========================================================="
                echo "Unstaging $FILE for the commit -- Python but not well-formed"
                echo "Reformat the file with:"
                echo "  $BLACK $FILE"
                echo "add and commit again."
                git reset -q HEAD $FILE
                retval=1
            else
                echo "Python check for $FILE: OK"
            fi
        fi
    done
}

check_xml_wellformed()
{
    for FILE in `git diff-index --name-only --cached $against -- | grep -E '\.xml'` ; do
        echo "Checking XMLLint pass: $FILE"
        if ! $XMLLINT --format $FILE | diff - $FILE; then
            FN=$(basename $FILE)
            echo "========================================================="
            echo "Unstaging $FILE for the commit -- XML but not well-formed"
            echo "Reformat the file with:"
            echo "  $XMLLINT --format $FILE > /tmp/$FN && cp /tmp/$FN $FILE"
            echo "add and commit again."
            git reset -q HEAD $FILE
            retval=2
        else
            echo "XML check for $FILE: OK"
        fi
    done
}

$BLACK 2>/dev/null && check_python_wellformed
$XMLLINT --version 2>/dev/null && check_xml_wellformed

exit $retval
